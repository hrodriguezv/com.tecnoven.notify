/*
 * BasicCatalogueDialog.java
 *
 * Created on May 31, 2009, 10:42 PM
 */

package com.tecnoven.notify.ui;

import java.util.ArrayList;

import javax.swing.table.DefaultTableModel;

import com.tecnoven.notify.ui.core.func.ICatalogueObject;
import com.tecnoven.notify.ui.core.func.IFunctDispatch;
import com.tecnoven.notify.util.ConnectionDB;
import com.tecnoven.notify.util.Constants;


/**
 * 
 * @author hector
 */
public class BasicCatalogueDialog extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2917050946299692473L;

	@SuppressWarnings("rawtypes")
	private Class reference;

	private DefaultTableModel modelTable;

	private ArrayList<ICatalogueObject> list;

	private IFunctDispatch callback;

	/**
	 * 
	 * Creates new form BasicCatalogueDialog
	 */
	public BasicCatalogueDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}

	/**
	 * 
	 * @param clazz
	 * @param parent
	 * @param modal
	 */
	@SuppressWarnings("rawtypes")
	public BasicCatalogueDialog(IFunctDispatch caller, Class clazz,
			java.awt.Frame parent, boolean modal, String title) {
		this(parent, modal);
		this.setTitle(title);
		this.reference = clazz;
		this.callback = caller;
		setLocationRelativeTo(parent);
		loadForm();
	}

	/**
	 * 
	 *
	 */
	@SuppressWarnings("unchecked")
	private void loadForm() {
		this.initTable();
		list = (ArrayList<ICatalogueObject>) ConnectionDB.getInstance()
				.getSession().createCriteria(this.reference).list();
		this.fillTable(list);
	}

	/**
	 * 
	 *
	 */
	private void initTable() {
		modelTable = new DefaultTableModel() {
			/**
			 * 
			 */
			private static final long serialVersionUID = -7450351557481642029L;

			@Override
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};
		modelTable.addColumn("Nombre");
		jTable1.setModel(modelTable);
		selectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(
		Constants.PATH_TO_ICONS + "ok.png")));
		selectButton.setText("Seleccionar");
		cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(
		Constants.PATH_TO_ICONS + "cancel.png")));
		cancelButton.setText("Cancelar");
	}

	/**
	 * 
	 * @param list
	 */
	private void fillTable(ArrayList<ICatalogueObject> list) {
		for (ICatalogueObject object : list) {
			Object[] row = new Object[1];
			row[0] = object.getName();
			modelTable.addRow(row);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        selectButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        selectButton.setText("Seleccionar");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(41, 41, 41)
                        .add(cancelButton)
                        .add(37, 37, 37)
                        .add(selectButton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 22, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(selectButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_selectButtonActionPerformed
		if (modelTable.getValueAt(jTable1.getSelectedRow(), 0) != null) {
			String value = (String) modelTable.getValueAt(jTable1
					.getSelectedRow(), 0);
			ICatalogueObject object = this.getSelectedObject(value);
			this.callback.setCatalogObject(object);
			this.dispose();
		}
	}// GEN-LAST:event_selectButtonActionPerformed

	private ICatalogueObject getSelectedObject(String value) {
		for (ICatalogueObject object : list) {
			if (object.getName().equals(value)) {
				return object;
			}
		}
		return null;
	}

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
		this.dispose();
	}// GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables

}
