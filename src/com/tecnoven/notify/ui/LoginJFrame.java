package com.tecnoven.notify.ui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import org.jdesktop.layout.GroupLayout;
import org.jdesktop.layout.LayoutStyle;

import com.tecnoven.notify.controller.LicenseManager;
import com.tecnoven.notify.domain.LicenseEntity;
import com.tecnoven.notify.domain.UserData;
import com.tecnoven.notify.util.ConnectionDB;
import com.tecnoven.notify.util.Constants;
import com.tecnoven.notify.util.FileUtil;
import com.tecnoven.notify.util.InetAddressUtil;


/**
 * 
 * @author hrodriguez
 */
public class LoginJFrame extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 330116447486223081L;

	/**
	 * Creates new form LoginJFrame
	 * 
	 * @throws IOException
	 */
	public LoginJFrame() throws IOException {
		super("Ingreso");
		setResizable(false);
		initComponents();
		LicenseManager manager = LicenseManager.getInstance();
		LicenseEntity license = manager.getLicense();
		String macAddressString = InetAddressUtil.getMacAddress().toLowerCase();
		if (!license.getMacAddress().equalsIgnoreCase(macAddressString)){
			throw new IllegalStateException("No esta autorizado para ejecutar la aplicacion en esta maquina");
		}
		if(license.getExpirationDate()!=null){
			Date today = new Date();
			if (license.getExpirationDate().getTime() < today.getTime()){
				throw new IllegalStateException("El tiempo estipulado para utilizar esta aplicacion ha expirado");
			}
		}
		this.jPasswordField1.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				LoginJFrame.this.jButton1ActionPerformed(e);
			}
			
		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		jTextField1 = new javax.swing.JTextField();
		jPasswordField1 = new javax.swing.JPasswordField();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setText("Usuario");

		jLabel2.setText("Clave");

		jButton1.setText("Aceptar");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				getContentPane());
		layout.setHorizontalGroup(layout.createParallelGroup(
				GroupLayout.LEADING).add(
				layout.createSequentialGroup().add(41, 41, 41).add(
						layout.createParallelGroup(GroupLayout.TRAILING).add(
								jLabel2).add(jLabel1)).addPreferredGap(
						LayoutStyle.RELATED).add(
						layout.createParallelGroup(GroupLayout.LEADING).add(
								jPasswordField1, GroupLayout.DEFAULT_SIZE, 99,
								Short.MAX_VALUE).add(jTextField1,
								GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
						.add(21, 21, 21).add(jButton1,
								GroupLayout.PREFERRED_SIZE, 82,
								GroupLayout.PREFERRED_SIZE).add(28, 28, 28)));
		layout.setVerticalGroup(layout
				.createParallelGroup(GroupLayout.TRAILING).add(
						layout.createSequentialGroup().addContainerGap().add(
								layout
										.createParallelGroup(
												GroupLayout.BASELINE).add(
												jTextField1,
												GroupLayout.DEFAULT_SIZE, 19,
												Short.MAX_VALUE).add(jLabel1))
								.add(6, 6, 6).add(
										layout.createParallelGroup(
												GroupLayout.BASELINE).add(
												jButton1).add(jLabel2).add(
												jPasswordField1,
												GroupLayout.PREFERRED_SIZE,
												GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE))
								.add(24, 24, 24)));
		getContentPane().setLayout(layout);
		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void clear() {
		jTextField1.setText("");
		jPasswordField1.setText("");
	}

	private void action() {
		UserData user = (UserData) ConnectionDB.getInstance().getSession().get(
				UserData.class, jTextField1.getText());
		if (user != null) {
			String password = null;
			try {
				password = FileUtil.getHashValue(String.valueOf(jPasswordField1
						.getPassword()));
				if (password.equals(user.getPassword())) {
					setVisible(false);
					dispose();
					if (password.equals(Constants.DEFAULT_PASSWORD)) {
						int value = JOptionPane
								.showConfirmDialog(
										this,
										"Se ha detectado que aun tiene la clave por defecto.\n ¿Desea cambiar la clave ahora?",
										"Cambio de Clave",
										JOptionPane.YES_NO_OPTION,
										JOptionPane.INFORMATION_MESSAGE);

						if (value == 0) {
							Dimension d = Toolkit.getDefaultToolkit()
									.getScreenSize();
							ChangePasswordDialog passFrame = new ChangePasswordDialog(
									user);
							passFrame.setLocation((d.width - passFrame
									.getWidth()) / 2, (d.height - passFrame
									.getHeight()) / 2);
							passFrame.setVisible(true);
						}
					}
					user.setLogged(true);
					ConnectionDB.getInstance().getSession().update(user);
					ConnectionDB.getInstance().getSession().flush();
					new MainFrame(user);
				} else {
					this.jButton1.setEnabled(true);
					JOptionPane.showConfirmDialog(this, "Clave Inválida",
							"Error", JOptionPane.DEFAULT_OPTION,
							JOptionPane.ERROR_MESSAGE);
					this.jPasswordField1.setText("");
					this.jPasswordField1.requestFocus();
				}
			} catch (NoSuchAlgorithmException e) {
				e.printStackTrace();
			}
		} else {
			this.jButton1.setEnabled(true);
			int answer = JOptionPane.showConfirmDialog(this,
					"Usuario Inválido \n ¿Desea intentar de nuevo?");
			if (answer == JOptionPane.NO_OPTION) {
				setVisible(false);
				dispose();
			}
			clear();
		}
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		this.jButton1.setEnabled(false);
		SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				action();
			}
		});
	}// GEN-LAST:event_jButton1ActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
				LoginJFrame jf = null;
				try {
					jf = new LoginJFrame();
					jf.setLocation((d.width - jf.getWidth()) / 2,
							(d.height - jf.getHeight()) / 2);
					jf.setVisible(true);
				} catch (Exception e) {
					JOptionPane
							.showConfirmDialog(
									jf,
									"Ha ocurrido un error al intentar iniciar la aplicacion \nCausa = ["+e.getLocalizedMessage()+"]\nPongase en contacto con el personal tecnico de Tecnoven \n \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t \t\t \t \t \t \t\t \t \t \t \t\t \t \t \t \t [www.tecnoven.com.ve]",
									"Error", JOptionPane.DEFAULT_OPTION,
									JOptionPane.ERROR_MESSAGE);
					System.exit(0);
				}
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPasswordField jPasswordField1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration//GEN-END:variables

}
